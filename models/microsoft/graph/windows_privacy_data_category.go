package graph
import (
    "strings"
    "errors"
)
// 
type WindowsPrivacyDataCategory int

const (
    NOTCONFIGURED_WINDOWSPRIVACYDATACATEGORY WindowsPrivacyDataCategory = iota
    ACCOUNTINFO_WINDOWSPRIVACYDATACATEGORY
    APPSRUNINBACKGROUND_WINDOWSPRIVACYDATACATEGORY
    CALENDAR_WINDOWSPRIVACYDATACATEGORY
    CALLHISTORY_WINDOWSPRIVACYDATACATEGORY
    CAMERA_WINDOWSPRIVACYDATACATEGORY
    CONTACTS_WINDOWSPRIVACYDATACATEGORY
    DIAGNOSTICSINFO_WINDOWSPRIVACYDATACATEGORY
    EMAIL_WINDOWSPRIVACYDATACATEGORY
    LOCATION_WINDOWSPRIVACYDATACATEGORY
    MESSAGING_WINDOWSPRIVACYDATACATEGORY
    MICROPHONE_WINDOWSPRIVACYDATACATEGORY
    MOTION_WINDOWSPRIVACYDATACATEGORY
    NOTIFICATIONS_WINDOWSPRIVACYDATACATEGORY
    PHONE_WINDOWSPRIVACYDATACATEGORY
    RADIOS_WINDOWSPRIVACYDATACATEGORY
    TASKS_WINDOWSPRIVACYDATACATEGORY
    SYNCWITHDEVICES_WINDOWSPRIVACYDATACATEGORY
    TRUSTEDDEVICES_WINDOWSPRIVACYDATACATEGORY
)

func (i WindowsPrivacyDataCategory) String() string {
    return []string{"NOTCONFIGURED", "ACCOUNTINFO", "APPSRUNINBACKGROUND", "CALENDAR", "CALLHISTORY", "CAMERA", "CONTACTS", "DIAGNOSTICSINFO", "EMAIL", "LOCATION", "MESSAGING", "MICROPHONE", "MOTION", "NOTIFICATIONS", "PHONE", "RADIOS", "TASKS", "SYNCWITHDEVICES", "TRUSTEDDEVICES"}[i]
}
func ParseWindowsPrivacyDataCategory(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "NOTCONFIGURED":
            return NOTCONFIGURED_WINDOWSPRIVACYDATACATEGORY, nil
        case "ACCOUNTINFO":
            return ACCOUNTINFO_WINDOWSPRIVACYDATACATEGORY, nil
        case "APPSRUNINBACKGROUND":
            return APPSRUNINBACKGROUND_WINDOWSPRIVACYDATACATEGORY, nil
        case "CALENDAR":
            return CALENDAR_WINDOWSPRIVACYDATACATEGORY, nil
        case "CALLHISTORY":
            return CALLHISTORY_WINDOWSPRIVACYDATACATEGORY, nil
        case "CAMERA":
            return CAMERA_WINDOWSPRIVACYDATACATEGORY, nil
        case "CONTACTS":
            return CONTACTS_WINDOWSPRIVACYDATACATEGORY, nil
        case "DIAGNOSTICSINFO":
            return DIAGNOSTICSINFO_WINDOWSPRIVACYDATACATEGORY, nil
        case "EMAIL":
            return EMAIL_WINDOWSPRIVACYDATACATEGORY, nil
        case "LOCATION":
            return LOCATION_WINDOWSPRIVACYDATACATEGORY, nil
        case "MESSAGING":
            return MESSAGING_WINDOWSPRIVACYDATACATEGORY, nil
        case "MICROPHONE":
            return MICROPHONE_WINDOWSPRIVACYDATACATEGORY, nil
        case "MOTION":
            return MOTION_WINDOWSPRIVACYDATACATEGORY, nil
        case "NOTIFICATIONS":
            return NOTIFICATIONS_WINDOWSPRIVACYDATACATEGORY, nil
        case "PHONE":
            return PHONE_WINDOWSPRIVACYDATACATEGORY, nil
        case "RADIOS":
            return RADIOS_WINDOWSPRIVACYDATACATEGORY, nil
        case "TASKS":
            return TASKS_WINDOWSPRIVACYDATACATEGORY, nil
        case "SYNCWITHDEVICES":
            return SYNCWITHDEVICES_WINDOWSPRIVACYDATACATEGORY, nil
        case "TRUSTEDDEVICES":
            return TRUSTEDDEVICES_WINDOWSPRIVACYDATACATEGORY, nil
    }
    return 0, errors.New("Unknown WindowsPrivacyDataCategory value: " + v)
}
func SerializeWindowsPrivacyDataCategory(values []WindowsPrivacyDataCategory) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
