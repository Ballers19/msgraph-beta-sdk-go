package graph

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55 "github.com/microsoft/kiota/abstractions/go/serialization"
)

type WindowsMalwareInformation struct {
    Entity
    additionalInformationUrl *string;
    category *WindowsMalwareCategory;
    deviceMalwareStates []MalwareStateForWindowsDevice;
    displayName *string;
    lastDetectionDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    severity *WindowsMalwareSeverity;
}
func NewWindowsMalwareInformation()(*WindowsMalwareInformation) {
    m := &WindowsMalwareInformation{
        Entity: *NewEntity(),
    }
    return m
}
func (m *WindowsMalwareInformation) GetAdditionalInformationUrl()(*string) {
    if m == nil {
        return nil
    } else {
        return m.additionalInformationUrl
    }
}
func (m *WindowsMalwareInformation) GetCategory()(*WindowsMalwareCategory) {
    if m == nil {
        return nil
    } else {
        return m.category
    }
}
func (m *WindowsMalwareInformation) GetDeviceMalwareStates()([]MalwareStateForWindowsDevice) {
    if m == nil {
        return nil
    } else {
        return m.deviceMalwareStates
    }
}
func (m *WindowsMalwareInformation) GetDisplayName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.displayName
    }
}
func (m *WindowsMalwareInformation) GetLastDetectionDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.lastDetectionDateTime
    }
}
func (m *WindowsMalwareInformation) GetSeverity()(*WindowsMalwareSeverity) {
    if m == nil {
        return nil
    } else {
        return m.severity
    }
}
func (m *WindowsMalwareInformation) GetFieldDeserializers()(map[string]func(interface{}, i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["additionalInformationUrl"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        m.SetAdditionalInformationUrl(val)
        return nil
    }
    res["category"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseWindowsMalwareCategory)
        if err != nil {
            return err
        }
        cast := val.(WindowsMalwareCategory)
        m.SetCategory(&cast)
        return nil
    }
    res["deviceMalwareStates"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetCollectionOfObjectValues(func () i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable { return NewMalwareStateForWindowsDevice() })
        if err != nil {
            return err
        }
        res := make([]MalwareStateForWindowsDevice, len(val))
        for i, v := range val {
            res[i] = *(v.(*MalwareStateForWindowsDevice))
        }
        m.SetDeviceMalwareStates(res)
        return nil
    }
    res["displayName"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        m.SetDisplayName(val)
        return nil
    }
    res["lastDetectionDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        m.SetLastDetectionDateTime(val)
        return nil
    }
    res["severity"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseWindowsMalwareSeverity)
        if err != nil {
            return err
        }
        cast := val.(WindowsMalwareSeverity)
        m.SetSeverity(&cast)
        return nil
    }
    return res
}
func (m *WindowsMalwareInformation) IsNil()(bool) {
    return m == nil
}
func (m *WindowsMalwareInformation) Serialize(writer i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteStringValue("additionalInformationUrl", m.GetAdditionalInformationUrl())
        if err != nil {
            return err
        }
    }
    if m.GetCategory() != nil {
        cast := m.GetCategory().String()
        err = writer.WriteStringValue("category", &cast)
        if err != nil {
            return err
        }
    }
    {
        cast := make([]i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable, len(m.GetDeviceMalwareStates()))
        for i, v := range m.GetDeviceMalwareStates() {
            temp := v
            cast[i] = i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.Parsable(&temp)
        }
        err = writer.WriteCollectionOfObjectValues("deviceMalwareStates", cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("displayName", m.GetDisplayName())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastDetectionDateTime", m.GetLastDetectionDateTime())
        if err != nil {
            return err
        }
    }
    if m.GetSeverity() != nil {
        cast := m.GetSeverity().String()
        err = writer.WriteStringValue("severity", &cast)
        if err != nil {
            return err
        }
    }
    return nil
}
func (m *WindowsMalwareInformation) SetAdditionalInformationUrl(value *string)() {
    m.additionalInformationUrl = value
}
func (m *WindowsMalwareInformation) SetCategory(value *WindowsMalwareCategory)() {
    m.category = value
}
func (m *WindowsMalwareInformation) SetDeviceMalwareStates(value []MalwareStateForWindowsDevice)() {
    m.deviceMalwareStates = value
}
func (m *WindowsMalwareInformation) SetDisplayName(value *string)() {
    m.displayName = value
}
func (m *WindowsMalwareInformation) SetLastDetectionDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    m.lastDetectionDateTime = value
}
func (m *WindowsMalwareInformation) SetSeverity(value *WindowsMalwareSeverity)() {
    m.severity = value
}
