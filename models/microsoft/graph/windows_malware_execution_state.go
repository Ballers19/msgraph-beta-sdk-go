package graph
import (
    "strings"
    "errors"
)
type WindowsMalwareExecutionState int

const (
    UNKNOWN_WINDOWSMALWAREEXECUTIONSTATE WindowsMalwareExecutionState = iota
    BLOCKED_WINDOWSMALWAREEXECUTIONSTATE
    ALLOWED_WINDOWSMALWAREEXECUTIONSTATE
    RUNNING_WINDOWSMALWAREEXECUTIONSTATE
    NOTRUNNING_WINDOWSMALWAREEXECUTIONSTATE
)

func (i WindowsMalwareExecutionState) String() string {
    return []string{"UNKNOWN", "BLOCKED", "ALLOWED", "RUNNING", "NOTRUNNING"}[i]
}
func ParseWindowsMalwareExecutionState(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            return UNKNOWN_WINDOWSMALWAREEXECUTIONSTATE, nil
        case "BLOCKED":
            return BLOCKED_WINDOWSMALWAREEXECUTIONSTATE, nil
        case "ALLOWED":
            return ALLOWED_WINDOWSMALWAREEXECUTIONSTATE, nil
        case "RUNNING":
            return RUNNING_WINDOWSMALWAREEXECUTIONSTATE, nil
        case "NOTRUNNING":
            return NOTRUNNING_WINDOWSMALWAREEXECUTIONSTATE, nil
    }
    return 0, errors.New("Unknown WindowsMalwareExecutionState value: " + v)
}
func SerializeWindowsMalwareExecutionState(values []WindowsMalwareExecutionState) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
