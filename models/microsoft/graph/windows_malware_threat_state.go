package graph
import (
    "strings"
    "errors"
)
// 
type WindowsMalwareThreatState int

const (
    ACTIVE_WINDOWSMALWARETHREATSTATE WindowsMalwareThreatState = iota
    ACTIONFAILED_WINDOWSMALWARETHREATSTATE
    MANUALSTEPSREQUIRED_WINDOWSMALWARETHREATSTATE
    FULLSCANREQUIRED_WINDOWSMALWARETHREATSTATE
    REBOOTREQUIRED_WINDOWSMALWARETHREATSTATE
    REMEDIATEDWITHNONCRITICALFAILURES_WINDOWSMALWARETHREATSTATE
    QUARANTINED_WINDOWSMALWARETHREATSTATE
    REMOVED_WINDOWSMALWARETHREATSTATE
    CLEANED_WINDOWSMALWARETHREATSTATE
    ALLOWED_WINDOWSMALWARETHREATSTATE
    NOSTATUSCLEARED_WINDOWSMALWARETHREATSTATE
)

func (i WindowsMalwareThreatState) String() string {
    return []string{"ACTIVE", "ACTIONFAILED", "MANUALSTEPSREQUIRED", "FULLSCANREQUIRED", "REBOOTREQUIRED", "REMEDIATEDWITHNONCRITICALFAILURES", "QUARANTINED", "REMOVED", "CLEANED", "ALLOWED", "NOSTATUSCLEARED"}[i]
}
func ParseWindowsMalwareThreatState(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "ACTIVE":
            return ACTIVE_WINDOWSMALWARETHREATSTATE, nil
        case "ACTIONFAILED":
            return ACTIONFAILED_WINDOWSMALWARETHREATSTATE, nil
        case "MANUALSTEPSREQUIRED":
            return MANUALSTEPSREQUIRED_WINDOWSMALWARETHREATSTATE, nil
        case "FULLSCANREQUIRED":
            return FULLSCANREQUIRED_WINDOWSMALWARETHREATSTATE, nil
        case "REBOOTREQUIRED":
            return REBOOTREQUIRED_WINDOWSMALWARETHREATSTATE, nil
        case "REMEDIATEDWITHNONCRITICALFAILURES":
            return REMEDIATEDWITHNONCRITICALFAILURES_WINDOWSMALWARETHREATSTATE, nil
        case "QUARANTINED":
            return QUARANTINED_WINDOWSMALWARETHREATSTATE, nil
        case "REMOVED":
            return REMOVED_WINDOWSMALWARETHREATSTATE, nil
        case "CLEANED":
            return CLEANED_WINDOWSMALWARETHREATSTATE, nil
        case "ALLOWED":
            return ALLOWED_WINDOWSMALWARETHREATSTATE, nil
        case "NOSTATUSCLEARED":
            return NOSTATUSCLEARED_WINDOWSMALWARETHREATSTATE, nil
    }
    return 0, errors.New("Unknown WindowsMalwareThreatState value: " + v)
}
func SerializeWindowsMalwareThreatState(values []WindowsMalwareThreatState) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
