package graph
import (
    "strings"
    "errors"
)
// 
type M365AlertDetermination int

const (
    UNKNOWN_M365ALERTDETERMINATION M365AlertDetermination = iota
    APT_M365ALERTDETERMINATION
    MALWARE_M365ALERTDETERMINATION
    SECURITYPERSONNEL_M365ALERTDETERMINATION
    SECURITYTESTING_M365ALERTDETERMINATION
    UNWANTEDSOFTWARE_M365ALERTDETERMINATION
    OTHER_M365ALERTDETERMINATION
    MULTISTAGEDATTACK_M365ALERTDETERMINATION
    COMPROMISEDUSER_M365ALERTDETERMINATION
    PHISHING_M365ALERTDETERMINATION
    MALICIOUSUSERACTIVITY_M365ALERTDETERMINATION
    CLEAN_M365ALERTDETERMINATION
    INSUFFICIENTDATA_M365ALERTDETERMINATION
    CONFIRMEDUSERACTIVITY_M365ALERTDETERMINATION
    LINEOFBUSINESSAPPLICATION_M365ALERTDETERMINATION
    UNKNOWNFUTUREVALUE_M365ALERTDETERMINATION
)

func (i M365AlertDetermination) String() string {
    return []string{"UNKNOWN", "APT", "MALWARE", "SECURITYPERSONNEL", "SECURITYTESTING", "UNWANTEDSOFTWARE", "OTHER", "MULTISTAGEDATTACK", "COMPROMISEDUSER", "PHISHING", "MALICIOUSUSERACTIVITY", "CLEAN", "INSUFFICIENTDATA", "CONFIRMEDUSERACTIVITY", "LINEOFBUSINESSAPPLICATION", "UNKNOWNFUTUREVALUE"}[i]
}
func ParseM365AlertDetermination(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            return UNKNOWN_M365ALERTDETERMINATION, nil
        case "APT":
            return APT_M365ALERTDETERMINATION, nil
        case "MALWARE":
            return MALWARE_M365ALERTDETERMINATION, nil
        case "SECURITYPERSONNEL":
            return SECURITYPERSONNEL_M365ALERTDETERMINATION, nil
        case "SECURITYTESTING":
            return SECURITYTESTING_M365ALERTDETERMINATION, nil
        case "UNWANTEDSOFTWARE":
            return UNWANTEDSOFTWARE_M365ALERTDETERMINATION, nil
        case "OTHER":
            return OTHER_M365ALERTDETERMINATION, nil
        case "MULTISTAGEDATTACK":
            return MULTISTAGEDATTACK_M365ALERTDETERMINATION, nil
        case "COMPROMISEDUSER":
            return COMPROMISEDUSER_M365ALERTDETERMINATION, nil
        case "PHISHING":
            return PHISHING_M365ALERTDETERMINATION, nil
        case "MALICIOUSUSERACTIVITY":
            return MALICIOUSUSERACTIVITY_M365ALERTDETERMINATION, nil
        case "CLEAN":
            return CLEAN_M365ALERTDETERMINATION, nil
        case "INSUFFICIENTDATA":
            return INSUFFICIENTDATA_M365ALERTDETERMINATION, nil
        case "CONFIRMEDUSERACTIVITY":
            return CONFIRMEDUSERACTIVITY_M365ALERTDETERMINATION, nil
        case "LINEOFBUSINESSAPPLICATION":
            return LINEOFBUSINESSAPPLICATION_M365ALERTDETERMINATION, nil
        case "UNKNOWNFUTUREVALUE":
            return UNKNOWNFUTUREVALUE_M365ALERTDETERMINATION, nil
    }
    return 0, errors.New("Unknown M365AlertDetermination value: " + v)
}
func SerializeM365AlertDetermination(values []M365AlertDetermination) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
