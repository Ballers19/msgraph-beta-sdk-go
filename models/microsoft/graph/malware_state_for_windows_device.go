package graph

import (
    i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e "time"
    i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55 "github.com/microsoft/kiota/abstractions/go/serialization"
)

type MalwareStateForWindowsDevice struct {
    Entity
    detectionCount *int32;
    deviceName *string;
    executionState *WindowsMalwareExecutionState;
    initialDetectionDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    lastStateChangeDateTime *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time;
    threatState *WindowsMalwareThreatState;
}
func NewMalwareStateForWindowsDevice()(*MalwareStateForWindowsDevice) {
    m := &MalwareStateForWindowsDevice{
        Entity: *NewEntity(),
    }
    return m
}
func (m *MalwareStateForWindowsDevice) GetDetectionCount()(*int32) {
    if m == nil {
        return nil
    } else {
        return m.detectionCount
    }
}
func (m *MalwareStateForWindowsDevice) GetDeviceName()(*string) {
    if m == nil {
        return nil
    } else {
        return m.deviceName
    }
}
func (m *MalwareStateForWindowsDevice) GetExecutionState()(*WindowsMalwareExecutionState) {
    if m == nil {
        return nil
    } else {
        return m.executionState
    }
}
func (m *MalwareStateForWindowsDevice) GetInitialDetectionDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.initialDetectionDateTime
    }
}
func (m *MalwareStateForWindowsDevice) GetLastStateChangeDateTime()(*i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time) {
    if m == nil {
        return nil
    } else {
        return m.lastStateChangeDateTime
    }
}
func (m *MalwareStateForWindowsDevice) GetThreatState()(*WindowsMalwareThreatState) {
    if m == nil {
        return nil
    } else {
        return m.threatState
    }
}
func (m *MalwareStateForWindowsDevice) GetFieldDeserializers()(map[string]func(interface{}, i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode)(error)) {
    res := m.Entity.GetFieldDeserializers()
    res["detectionCount"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetInt32Value()
        if err != nil {
            return err
        }
        m.SetDetectionCount(val)
        return nil
    }
    res["deviceName"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetStringValue()
        if err != nil {
            return err
        }
        m.SetDeviceName(val)
        return nil
    }
    res["executionState"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseWindowsMalwareExecutionState)
        if err != nil {
            return err
        }
        cast := val.(WindowsMalwareExecutionState)
        m.SetExecutionState(&cast)
        return nil
    }
    res["initialDetectionDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        m.SetInitialDetectionDateTime(val)
        return nil
    }
    res["lastStateChangeDateTime"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetTimeValue()
        if err != nil {
            return err
        }
        m.SetLastStateChangeDateTime(val)
        return nil
    }
    res["threatState"] = func (o interface{}, n i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.ParseNode) error {
        val, err := n.GetEnumValue(ParseWindowsMalwareThreatState)
        if err != nil {
            return err
        }
        cast := val.(WindowsMalwareThreatState)
        m.SetThreatState(&cast)
        return nil
    }
    return res
}
func (m *MalwareStateForWindowsDevice) IsNil()(bool) {
    return m == nil
}
func (m *MalwareStateForWindowsDevice) Serialize(writer i04eb5309aeaafadd28374d79c8471df9b267510b4dc2e3144c378c50f6fd7b55.SerializationWriter)(error) {
    err := m.Entity.Serialize(writer)
    if err != nil {
        return err
    }
    {
        err = writer.WriteInt32Value("detectionCount", m.GetDetectionCount())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteStringValue("deviceName", m.GetDeviceName())
        if err != nil {
            return err
        }
    }
    if m.GetExecutionState() != nil {
        cast := m.GetExecutionState().String()
        err = writer.WriteStringValue("executionState", &cast)
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("initialDetectionDateTime", m.GetInitialDetectionDateTime())
        if err != nil {
            return err
        }
    }
    {
        err = writer.WriteTimeValue("lastStateChangeDateTime", m.GetLastStateChangeDateTime())
        if err != nil {
            return err
        }
    }
    if m.GetThreatState() != nil {
        cast := m.GetThreatState().String()
        err = writer.WriteStringValue("threatState", &cast)
        if err != nil {
            return err
        }
    }
    return nil
}
func (m *MalwareStateForWindowsDevice) SetDetectionCount(value *int32)() {
    m.detectionCount = value
}
func (m *MalwareStateForWindowsDevice) SetDeviceName(value *string)() {
    m.deviceName = value
}
func (m *MalwareStateForWindowsDevice) SetExecutionState(value *WindowsMalwareExecutionState)() {
    m.executionState = value
}
func (m *MalwareStateForWindowsDevice) SetInitialDetectionDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    m.initialDetectionDateTime = value
}
func (m *MalwareStateForWindowsDevice) SetLastStateChangeDateTime(value *i336074805fc853987abe6f7fe3ad97a6a6f3077a16391fec744f671a015fbd7e.Time)() {
    m.lastStateChangeDateTime = value
}
func (m *MalwareStateForWindowsDevice) SetThreatState(value *WindowsMalwareThreatState)() {
    m.threatState = value
}
