package graph
import (
    "strings"
    "errors"
)
// 
type AlertDetermination_v2 int

const (
    UNKNOWN_ALERTDETERMINATION_V2 AlertDetermination_v2 = iota
    APT_ALERTDETERMINATION_V2
    MALWARE_ALERTDETERMINATION_V2
    SECURITYPERSONNEL_ALERTDETERMINATION_V2
    SECURITYTESTING_ALERTDETERMINATION_V2
    UNWANTEDSOFTWARE_ALERTDETERMINATION_V2
    OTHER_ALERTDETERMINATION_V2
    MULTISTAGEDATTACK_ALERTDETERMINATION_V2
    COMPROMISEDUSER_ALERTDETERMINATION_V2
    PHISHING_ALERTDETERMINATION_V2
    MALICIOUSUSERACTIVITY_ALERTDETERMINATION_V2
    CLEAN_ALERTDETERMINATION_V2
    INSUFFICIENTDATA_ALERTDETERMINATION_V2
    CONFIRMEDUSERACTIVITY_ALERTDETERMINATION_V2
    LINEOFBUSINESSAPPLICATION_ALERTDETERMINATION_V2
    UNKNOWNFUTUREVALUE_ALERTDETERMINATION_V2
)

func (i AlertDetermination_v2) String() string {
    return []string{"UNKNOWN", "APT", "MALWARE", "SECURITYPERSONNEL", "SECURITYTESTING", "UNWANTEDSOFTWARE", "OTHER", "MULTISTAGEDATTACK", "COMPROMISEDUSER", "PHISHING", "MALICIOUSUSERACTIVITY", "CLEAN", "INSUFFICIENTDATA", "CONFIRMEDUSERACTIVITY", "LINEOFBUSINESSAPPLICATION", "UNKNOWNFUTUREVALUE"}[i]
}
func ParseAlertDetermination_v2(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            return UNKNOWN_ALERTDETERMINATION_V2, nil
        case "APT":
            return APT_ALERTDETERMINATION_V2, nil
        case "MALWARE":
            return MALWARE_ALERTDETERMINATION_V2, nil
        case "SECURITYPERSONNEL":
            return SECURITYPERSONNEL_ALERTDETERMINATION_V2, nil
        case "SECURITYTESTING":
            return SECURITYTESTING_ALERTDETERMINATION_V2, nil
        case "UNWANTEDSOFTWARE":
            return UNWANTEDSOFTWARE_ALERTDETERMINATION_V2, nil
        case "OTHER":
            return OTHER_ALERTDETERMINATION_V2, nil
        case "MULTISTAGEDATTACK":
            return MULTISTAGEDATTACK_ALERTDETERMINATION_V2, nil
        case "COMPROMISEDUSER":
            return COMPROMISEDUSER_ALERTDETERMINATION_V2, nil
        case "PHISHING":
            return PHISHING_ALERTDETERMINATION_V2, nil
        case "MALICIOUSUSERACTIVITY":
            return MALICIOUSUSERACTIVITY_ALERTDETERMINATION_V2, nil
        case "CLEAN":
            return CLEAN_ALERTDETERMINATION_V2, nil
        case "INSUFFICIENTDATA":
            return INSUFFICIENTDATA_ALERTDETERMINATION_V2, nil
        case "CONFIRMEDUSERACTIVITY":
            return CONFIRMEDUSERACTIVITY_ALERTDETERMINATION_V2, nil
        case "LINEOFBUSINESSAPPLICATION":
            return LINEOFBUSINESSAPPLICATION_ALERTDETERMINATION_V2, nil
        case "UNKNOWNFUTUREVALUE":
            return UNKNOWNFUTUREVALUE_ALERTDETERMINATION_V2, nil
    }
    return 0, errors.New("Unknown AlertDetermination_v2 value: " + v)
}
func SerializeAlertDetermination_v2(values []AlertDetermination_v2) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
