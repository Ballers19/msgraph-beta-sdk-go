package graph
import (
    "strings"
    "errors"
)
type ResultantAppStateDetail int

const (
    PROCESSORARCHITECTURENOTAPPLICABLE_RESULTANTAPPSTATEDETAIL ResultantAppStateDetail = iota
    MINIMUMDISKSPACENOTMET_RESULTANTAPPSTATEDETAIL
    MINIMUMOSVERSIONNOTMET_RESULTANTAPPSTATEDETAIL
    MINIMUMPHYSICALMEMORYNOTMET_RESULTANTAPPSTATEDETAIL
    MINIMUMLOGICALPROCESSORCOUNTNOTMET_RESULTANTAPPSTATEDETAIL
    MINIMUMCPUSPEEDNOTMET_RESULTANTAPPSTATEDETAIL
    PLATFORMNOTAPPLICABLE_RESULTANTAPPSTATEDETAIL
    FILESYSTEMREQUIREMENTNOTMET_RESULTANTAPPSTATEDETAIL
    REGISTRYREQUIREMENTNOTMET_RESULTANTAPPSTATEDETAIL
    POWERSHELLSCRIPTREQUIREMENTNOTMET_RESULTANTAPPSTATEDETAIL
    NOADDITIONALDETAILS_RESULTANTAPPSTATEDETAIL
    DEPENDENCYFAILEDTOINSTALL_RESULTANTAPPSTATEDETAIL
    DEPENDENCYWITHREQUIREMENTSNOTMET_RESULTANTAPPSTATEDETAIL
    DEPENDENCYPENDINGREBOOT_RESULTANTAPPSTATEDETAIL
    DEPENDENCYWITHAUTOINSTALLDISABLED_RESULTANTAPPSTATEDETAIL
    IOSAPPSTOREUPDATEFAILEDTOINSTALL_RESULTANTAPPSTATEDETAIL
    VPPAPPHASUPDATEAVAILABLE_RESULTANTAPPSTATEDETAIL
    USERREJECTEDUPDATE_RESULTANTAPPSTATEDETAIL
    SEEINSTALLERRORCODE_RESULTANTAPPSTATEDETAIL
    AUTOINSTALLDISABLED_RESULTANTAPPSTATEDETAIL
    MANAGEDAPPNOLONGERPRESENT_RESULTANTAPPSTATEDETAIL
    USERREJECTEDINSTALL_RESULTANTAPPSTATEDETAIL
    USERISNOTLOGGEDINTOAPPSTORE_RESULTANTAPPSTATEDETAIL
    SEEUNINSTALLERRORCODE_RESULTANTAPPSTATEDETAIL
    PENDINGREBOOT_RESULTANTAPPSTATEDETAIL
    INSTALLINGDEPENDENCIES_RESULTANTAPPSTATEDETAIL
    CONTENTDOWNLOADED_RESULTANTAPPSTATEDETAIL
)

func (i ResultantAppStateDetail) String() string {
    return []string{"PROCESSORARCHITECTURENOTAPPLICABLE", "MINIMUMDISKSPACENOTMET", "MINIMUMOSVERSIONNOTMET", "MINIMUMPHYSICALMEMORYNOTMET", "MINIMUMLOGICALPROCESSORCOUNTNOTMET", "MINIMUMCPUSPEEDNOTMET", "PLATFORMNOTAPPLICABLE", "FILESYSTEMREQUIREMENTNOTMET", "REGISTRYREQUIREMENTNOTMET", "POWERSHELLSCRIPTREQUIREMENTNOTMET", "NOADDITIONALDETAILS", "DEPENDENCYFAILEDTOINSTALL", "DEPENDENCYWITHREQUIREMENTSNOTMET", "DEPENDENCYPENDINGREBOOT", "DEPENDENCYWITHAUTOINSTALLDISABLED", "IOSAPPSTOREUPDATEFAILEDTOINSTALL", "VPPAPPHASUPDATEAVAILABLE", "USERREJECTEDUPDATE", "SEEINSTALLERRORCODE", "AUTOINSTALLDISABLED", "MANAGEDAPPNOLONGERPRESENT", "USERREJECTEDINSTALL", "USERISNOTLOGGEDINTOAPPSTORE", "SEEUNINSTALLERRORCODE", "PENDINGREBOOT", "INSTALLINGDEPENDENCIES", "CONTENTDOWNLOADED"}[i]
}
func ParseResultantAppStateDetail(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "PROCESSORARCHITECTURENOTAPPLICABLE":
            return PROCESSORARCHITECTURENOTAPPLICABLE_RESULTANTAPPSTATEDETAIL, nil
        case "MINIMUMDISKSPACENOTMET":
            return MINIMUMDISKSPACENOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "MINIMUMOSVERSIONNOTMET":
            return MINIMUMOSVERSIONNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "MINIMUMPHYSICALMEMORYNOTMET":
            return MINIMUMPHYSICALMEMORYNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "MINIMUMLOGICALPROCESSORCOUNTNOTMET":
            return MINIMUMLOGICALPROCESSORCOUNTNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "MINIMUMCPUSPEEDNOTMET":
            return MINIMUMCPUSPEEDNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "PLATFORMNOTAPPLICABLE":
            return PLATFORMNOTAPPLICABLE_RESULTANTAPPSTATEDETAIL, nil
        case "FILESYSTEMREQUIREMENTNOTMET":
            return FILESYSTEMREQUIREMENTNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "REGISTRYREQUIREMENTNOTMET":
            return REGISTRYREQUIREMENTNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "POWERSHELLSCRIPTREQUIREMENTNOTMET":
            return POWERSHELLSCRIPTREQUIREMENTNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "NOADDITIONALDETAILS":
            return NOADDITIONALDETAILS_RESULTANTAPPSTATEDETAIL, nil
        case "DEPENDENCYFAILEDTOINSTALL":
            return DEPENDENCYFAILEDTOINSTALL_RESULTANTAPPSTATEDETAIL, nil
        case "DEPENDENCYWITHREQUIREMENTSNOTMET":
            return DEPENDENCYWITHREQUIREMENTSNOTMET_RESULTANTAPPSTATEDETAIL, nil
        case "DEPENDENCYPENDINGREBOOT":
            return DEPENDENCYPENDINGREBOOT_RESULTANTAPPSTATEDETAIL, nil
        case "DEPENDENCYWITHAUTOINSTALLDISABLED":
            return DEPENDENCYWITHAUTOINSTALLDISABLED_RESULTANTAPPSTATEDETAIL, nil
        case "IOSAPPSTOREUPDATEFAILEDTOINSTALL":
            return IOSAPPSTOREUPDATEFAILEDTOINSTALL_RESULTANTAPPSTATEDETAIL, nil
        case "VPPAPPHASUPDATEAVAILABLE":
            return VPPAPPHASUPDATEAVAILABLE_RESULTANTAPPSTATEDETAIL, nil
        case "USERREJECTEDUPDATE":
            return USERREJECTEDUPDATE_RESULTANTAPPSTATEDETAIL, nil
        case "SEEINSTALLERRORCODE":
            return SEEINSTALLERRORCODE_RESULTANTAPPSTATEDETAIL, nil
        case "AUTOINSTALLDISABLED":
            return AUTOINSTALLDISABLED_RESULTANTAPPSTATEDETAIL, nil
        case "MANAGEDAPPNOLONGERPRESENT":
            return MANAGEDAPPNOLONGERPRESENT_RESULTANTAPPSTATEDETAIL, nil
        case "USERREJECTEDINSTALL":
            return USERREJECTEDINSTALL_RESULTANTAPPSTATEDETAIL, nil
        case "USERISNOTLOGGEDINTOAPPSTORE":
            return USERISNOTLOGGEDINTOAPPSTORE_RESULTANTAPPSTATEDETAIL, nil
        case "SEEUNINSTALLERRORCODE":
            return SEEUNINSTALLERRORCODE_RESULTANTAPPSTATEDETAIL, nil
        case "PENDINGREBOOT":
            return PENDINGREBOOT_RESULTANTAPPSTATEDETAIL, nil
        case "INSTALLINGDEPENDENCIES":
            return INSTALLINGDEPENDENCIES_RESULTANTAPPSTATEDETAIL, nil
        case "CONTENTDOWNLOADED":
            return CONTENTDOWNLOADED_RESULTANTAPPSTATEDETAIL, nil
    }
    return 0, errors.New("Unknown ResultantAppStateDetail value: " + v)
}
func SerializeResultantAppStateDetail(values []ResultantAppStateDetail) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
