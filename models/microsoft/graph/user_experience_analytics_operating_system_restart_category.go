package graph
import (
    "strings"
    "errors"
)
type UserExperienceAnalyticsOperatingSystemRestartCategory int

const (
    UNKNOWN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY UserExperienceAnalyticsOperatingSystemRestartCategory = iota
    RESTARTWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    RESTARTWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    BLUESCREEN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    SHUTDOWNWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    SHUTDOWNWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    LONGPOWERBUTTONPRESS_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    BOOTERROR_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
    UPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY
)

func (i UserExperienceAnalyticsOperatingSystemRestartCategory) String() string {
    return []string{"UNKNOWN", "RESTARTWITHUPDATE", "RESTARTWITHOUTUPDATE", "BLUESCREEN", "SHUTDOWNWITHUPDATE", "SHUTDOWNWITHOUTUPDATE", "LONGPOWERBUTTONPRESS", "BOOTERROR", "UPDATE"}[i]
}
func ParseUserExperienceAnalyticsOperatingSystemRestartCategory(v string) (interface{}, error) {
    switch strings.ToUpper(v) {
        case "UNKNOWN":
            return UNKNOWN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "RESTARTWITHUPDATE":
            return RESTARTWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "RESTARTWITHOUTUPDATE":
            return RESTARTWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "BLUESCREEN":
            return BLUESCREEN_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "SHUTDOWNWITHUPDATE":
            return SHUTDOWNWITHUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "SHUTDOWNWITHOUTUPDATE":
            return SHUTDOWNWITHOUTUPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "LONGPOWERBUTTONPRESS":
            return LONGPOWERBUTTONPRESS_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "BOOTERROR":
            return BOOTERROR_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
        case "UPDATE":
            return UPDATE_USEREXPERIENCEANALYTICSOPERATINGSYSTEMRESTARTCATEGORY, nil
    }
    return 0, errors.New("Unknown UserExperienceAnalyticsOperatingSystemRestartCategory value: " + v)
}
func SerializeUserExperienceAnalyticsOperatingSystemRestartCategory(values []UserExperienceAnalyticsOperatingSystemRestartCategory) []string {
    result := make([]string, len(values))
    for i, v := range values {
        result[i] = v.String()
    }
    return result
}
